$Id$

Today's MOTD
------------
As long as the answer is right, who cares if the question is wrong?


Pending bugs:
-------------

channel.o(.text+0xab6): In function `SetChannelMode':
/home/kreator/work/cvs/hybserv/src/channel.c:806: warning: warning: your code still has assertions enabled!
sprintf_irc.o(.text+0x2fc): In function `vsprintf_irc':
/home/kreator/work/cvs/hybserv/src/sprintf_irc.c:438: warning: warning: Avoid *sprintf; use *snprintf. It is more secure.
/usr/lib/diet/lib-i386/libc.a(stderr.o)(.text+0x7): In function `__fflush_stderr':
: warning: warning: your code uses stdio (7+k bloat).
dcc.o(.text+0x4f3): In function `ConnectClient':
/home/kreator/work/cvs/hybserv/src/dcc.c:496: warning: warning: gethostbyaddr() leaks memory.  Use gethostbyaddr_r instead!
sock.o(.text+0x142): In function `SetupVirtualHost':
/home/kreator/work/cvs/hybserv/src/sock.c:196: warning: warning: gethostbyname() leaks memory.  Use gethostbyname_r instead!
/usr/lib/diet/lib-i386/libc.a(vfprintf.o)(.text+0x36): In function `vfprintf':
: warning: warning: the printf functions add several kilobytes of bloat.
/usr/lib/diet/lib-i386/libc.a(vsscanf.o)(.text+0x5b): In function `vsscanf':
: warning: warning: the scanf functions add several kilobytes of bloat.

*) fix absolutely ugly code formatting! [progress..]
*) bunch of *old* stuff I've found around:
  - take IP bans into account
  - add /cs getkey (returns channel key), for same accesslvl as /cs invite
  - operserv admins don't seem to get autovoice/autoop when the level is set to
    0, while regular users would
  - /cs info on private channel should require 1, not CMDINVITE
*) From Jared:
  if a user adds a linked nickname then deletes that linked nickname
  several times they start getting the too many nicks error.. it looks
  like the numlinks is being incremented several times every time someone
  adds a link and not being decremented at the same rate...
*) does not want to unforbid sometimes (??)
*) fix *LOCK functions (topic and mode lock)
*) temp ignores rotate (possible overflow)
*) > I plan on just setting the nickflood level higher in config.h, but
   could there be a configurable option via a operserv set command?
   Also, are there docs on what each operserv set variable is? Some of them
   are obvious, and then again, some aren't...
*) oper can't setup anything with other nicks
*) check dccprocess with similar bug as botprocess..
*) nickserv and chanserv have to be always enabled - fix this.
*) channel modes don't always get synced on restart
*) fix invalid gnote count
*) check for OnAccessList() without master nick call - only when necessary
*) remember to transfer access list in DeleteLink()
*) seems it is possible that nickname stays ghosted more than necessary if
   nick QUITs
*) send all mlock modes on channel creation
*) OperServ does not completely support hybrid7 modes yet, (for example
   .channel command or SECURE)
*) sed helpfiles so that they have proper time values
   NOTE: this should be done via %v or %t.. something like it
*) add flag for keeping other people's channel/nick status when
   reconnecting - i find it annonying to look at forced synching


Features yet to come:
---------------------
*) (13:37:00) padde: Any chance there could be coded an option, that would
   allow to specify a range of ports to be used to DCC services?
   (13:37:00) padde: would be usefull if the services is behind firewall
*) (23:37:25) andrew: hello
   (23:37:47) andrew: i'm just wondering if hybserv can be configured to
   block nicks that contain explicit words?
*)PuNkSterQFeTus: Heres an idea
  PuNkSterQFeTus: Instead of just /kill chan
  PuNkSterQFeTus: how about adding /kline chan
*) hide nick options..
*) save auth users before restart/die with a small ts..
*) blackbook for all operserv commands. searcheable, add, remove, list.
*) adx wishlist:
  1)
  <adx> for example, to create a new operserv's command
  <adx> "RESTRICT"
  <adx> you pass the mask, for example *!*@you.are.a.bad.guy
  <adx> then you can set some restrictions
  <adx> for example
  <adx> -nonickreg
  <adx> -max 5 (connections)
  <adx> -nolink
  <adx> etc...
  3)
  put operserv glines in oper.db
*) rewrite documentation
*) modularisation (_very_ unlikely to happen)
*) completely document API
*) localisation
*) misc stuff:
   private notes on channel and user records, available only to staff
   PGP/GPG keys per user
   multiple URL's, multiple email addresses (with limits)
   geek code
*) use btree&mmap (additionally use adns and glib)
*) improve block allocator
*) add cidr & ranged ip's
*) add tcpwrap capatibilities
*) ziplinks (perhaps use servlink?)
*) ideas by "John Binder" <jbinder@kgazd.bme.hu>:
   flood ctrl for services itself
   flood ctrl for channels: public flood, join-part flood, kick flood,
    deop flood, nick flood -> however, for some features it is obvious
    that chanserv/operserv will have to reside on channels, which I
    dislike (-kre)
*) implement modes flood trigger (and below)
*) add some features from http://www.appwatch.com/Linux/App/879/data.html
*) be compatibile with other ircds (!!)
*) umode +g ACCEPT list (BR's idea)
