dnl $Id$
dnl Process this file with autoconf to produce a configure script.
AC_INIT(source/hybserv.c)

AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_HEADER(include/defs.h)

dnl Set language and save it
AC_LANG_C
AC_LANG_SAVE

dnl Get system type
AC_CANONICAL_HOST
MYHOST=$host_os
case "$host_os" in
*sunos*)
  _SunOS=1
  ;;
*solaris*)
  _SunOS=1
  ;;
esac

dnl Package information
PACKAGE=HybServ2
VERSION=pre-1.8.0

dnl Standard installation path
AC_PREFIX_DEFAULT(/usr/local)

dnl Checks for programs.
AC_PROG_CC
AC_PATH_PROG(RM, rm)
AC_PATH_PROG(CP, cp)
AC_PATH_PROG(LN, ln)
AC_PATH_PROG(LS, ls)
AC_PATH_PROG(CHMOD, chmod)
AC_PATH_PROG(CHOWN, chown)
AC_PATH_PROG(AR, ar)
AC_PATH_PROG(RANLIB, ranlib)

dnl Check for a suitable install program
AC_PROG_INSTALL

WHOAMI=`whoami`
AC_SUBST(WHOAMI)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADER(stdarg.h,, AC_MSG_ERROR(** You must have stdarg.h in order to compile HybServ2 **))
AC_HEADER_TIME

dnl Add standard prefix to fix broken environments
LIBS="${LIBS} -L/usr/local/lib"
CFLAGS="${CFLAGS} -I/usr/local/include"

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(strdup strerror vprintf snprintf strncpy)
AC_CHECK_FUNC(gettimeofday, AC_DEFINE(HAVE_GETTIMEOFDAY))
AC_CHECK_FUNCS(gethostbyname, , [AC_CHECK_LIB(nsl, gethostbyname), , LIBS="$LIBS -lnsl"])
AC_CHECK_LIB(socket, socket, LIBS="$LIBS -lsocket")
AC_CHECK_LIB(crypt, crypt, LIBS="$LIBS -lcrypt")

dnl Do not compile with pthread support if they give a
dnl --disable-threads or --enable-threads=no to configure
AC_ARG_ENABLE(threads, [  --enable-threads        Enable thread support [default=yes]])

dnl We will use Solaris native threads if Solaris is present
if test ! "$enable_threads" = "no"; then
  AC_CHECK_LIB(thread, thr_create,
    AC_DEFINE(HAVE_SOLARIS_THREADS)
    CFLAGS="${CFLAGS} -D_REENTRANT"
    _have_thread=yes
    LIBP="-lthread",
    AC_MSG_WARN(No native Solaris threads - will try pthreads)
      AC_CHECK_LIB(pthread, pthread_create,
      AC_DEFINE(HAVE_PTHREADS)
      _have_pthread=yes
      if test -n "$_SunOS"; then
        CFLAGS="${CFLAGS} -D_POSIX_PTHREAD_SEMANTICS"
      else
        CFLAGS="${CFLAGS} -D_REENTRANT"
      fi
      LIBP="-lpthread",
      AC_MSG_WARN(Compiling without pthread support)))
fi
AC_SUBST(LIBP)

dnl Add support for sfio stdio library
hold_libs=$LIBS
hold_cflags=$CFLAGS
AC_ARG_WITH(sfio-lib, [  --with-sfio-lib=DIR     Directory containing sfio library], LIBS="${LIBS} -L${withval}")
hold_libs2=$LIBS
AC_ARG_WITH(sfio-inc, [  --with-sfio-inc=DIR     Directory containing sfio include files], CFLAGS="${CFLAGS} -I${withval}")
dnl non-multithread sfio
if test "x${LIBP}" = "x"; then
  LIBS="${LIBS} -lsfio"
  AC_CHECK_LIB(stdio, fprintf, _sfio=yes, _sfio=no)
  if test "$_sfio" = "no";
  then
    CFLAGS=$hold_cflags
    LIBS=$hold_libs
  else
    LIBS="$hold_libs2 -lstdio -lsfio"                                           
  fi
else
dnl multithread sfio
  LIBS="${LIBS} -lsfio-mt"
  AC_CHECK_LIB(stdio-mt, fprintf, _sfio=yes, _sfio=no)
  if test "$_sfio" = "no";
  then
    CFLAGS=$hold_cflags
    LIBS=$hold_libs
  else
    LIBS="$hold_libs2 -lstdio-mt -lsfio-mt"
  fi
fi

dnl Add support for libhoard
if test ! "$enable_threads" = "no"; then
  dnl OK, multithreaded environment
  hold_libs=$LIBS
  AC_ARG_WITH(hoard-lib, [  --with-hoard-lib=DIR    Directory containing hoard library], LIBS="${LIBS} -L${withval}")
  dnl add -lrt for Solaris
  if test -n "$_SunOS"; then
    LIBS="${LIBS} -lrt"
  fi
  hold_libs2=$LIBS
  LIBS="${LIBS} ${LIBP}"
  AC_CHECK_LIB(hoard, malloc, _hoard=yes, _hoard=no)
  if test "$_hoard" = "yes";
  then
    dnl Hoard found, proceed
    LIBS="$hold_libs2 -lhoard"
  else
    dnl restore LIBS since there is no libhoard
    LIBS=$hold_libs
  fi
fi

dnl Use sed to grab the version from Makefile.in
VERSION_MAJOR=`sed -n -e 's/VERSION_MAJOR = *\(.*\)$/\1/p' Makefile.in`

dnl And awk to process CVS serial no.
VERSION=$VERSION_MAJOR"_"`awk '{print $3}' include/serno.h| tr -d '"'`

dnl And subst-it.
AC_SUBST(VERSION)

AC_OUTPUT(              \
Makefile                \
libString/Makefile      \
source/Makefile         \
tools/Makefile          \
bin/settings.conf       \
bin/cleandb             \
include/config.h        \
)

echo "

Configuration:

  Detected OS:      ${host_os}
  HybServ2 Version: ${VERSION}
  Install path:     ${prefix}/hybserv
  Compiler:         ${CC}
  Compiler flags:   ${CFLAGS}
  Linker flags:     ${LIBS}"

if test -n "${LIBP}"; then
  echo "  Thread support:   enabled"
  echo "  Thread library:   ${LIBP}"
else
  echo "  Thread support:   disabled"
fi

echo
echo Please edit include/config.h to change the settings to match
echo your network before running make
echo
